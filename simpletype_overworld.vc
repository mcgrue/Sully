/// The autoexec function for overworld.map
///
void start()
{
    battles_enabled_here = 1;

    SaveEnable(); //can save on the overworld.
    _mapwrap_on = 1;

    entity.specframe[0] = 20;

/*
    //if galfrey's joined, the bridge is fixed!
    if( flags[F_HECK_GALFREY_JOIN] )
    {
        SetTile( 22,26,0,272 );
        SetObs( 22,26,0 );
    }
*/

/*
    if(  )
    {
        SetChasmModeObs();
    }
*/

    SetWeather(WEATHER_CLOUDS);

    InitMap_SetOverworldMode( 1 );
    InitMap();
    InitMap_SetOverworldMode( 0 );

    if( flags[F_RODNE_FLASHBACK] )
    {
        V1_StartMusic("res/music/VANGELIS.MOD");
    }
    else
    {
        V1_StartMusic( "res/music/aurora.mod" );
    }
}

/// The mapswitch to Undersea.map
void undersea()
{
    _mapwrap_on = 0;
    V1_MapSwitch("UNDERWATER.MAP",29,34,TBLACK);
}

/// The mapswitch to cottage.map
void cottage()
{
    // on the cottage map, arMapTemp[0] and arMapTemp[1] control the stae of the
    // front and back doors... so we set them as they should be before getting
    // in there

    _mapwrap_on = 0;
    if (entity.face[playerent] == 2)
    {
        //open the doors if we're coming from the top.
        arMapTemp[0] = 1;
        arMapTemp[1] = 1;
        V1_MapSwitch("mcdarin_cottage.map", 75,14, TBLACK);
    }
    else
    {
        //close the doors if we're coming from the top.
        arMapTemp[0] = 0;
        arMapTemp[1] = 0;
        V1_MapSwitch("mcdarin_cottage.map", 48,61, TBLACK);
    }
}

/// The mapswitch to Mountain.map
void mountain()
{
    _mapwrap_on = 0;

    V1_MapSwitch("jujube.map", 84, 97, TBLACK);
}

/// The mapswitch to Chasm.map's west entrace
void chasm_west()
{
    _mapwrap_on = 0;
    //V1_MapSwitch("chasm.map", 4, 1, TBLACK);
    
    V1_MapSwitch("gorge.map", 36, 19, TBLACK);
}

/// The mapswitch to Chasm.map's east entrace
void chasm_east()
{
    _mapwrap_on = 0;
    //V1_MapSwitch("chasm.map", 97, 40, TBLACK);
    
    V1_MapSwitch("gorge.map", 95, 19, TBLACK);
}

/// The mapswitch to bumville.map
void bumsville()
{
    _mapwrap_on = 0;
    //V1_MapSwitch("RODNE.MAP",32,2,TBLACK);
    V1_MapSwitch("bumville.map", 118, 93, TBLACK);
}

/// The mapswitch to rodne.map
void rodne_main()
{
    _mapwrap_on = 0;
    if( flags[F_RODNE_FLASHBACK] )
    {
        V1_MapSwitch("OLDVILLE.MAP",21,1,TBLACK);
    }

    V1_MapSwitch("RODNE.MAP",32,2,TBLACK);
}

/// The mapswitch to rodne.map's backdoor
void rodne_forest()
{
    _mapwrap_on = 0;
    V1_MapSwitch("RODNE.MAP",109,29,TBLACK);
}

/// The mapswitch to Shack.map
void loveshack()
{
    _mapwrap_on = 0;
    V1_MapSwitch("SHACK.MAP",1,29,TBLACK);
}

/// The mapswitch to Castle.map
void castle_heck()
{
    _mapwrap_on = 0;
    V1_MapSwitch("CASTLE.MAP",20,36,TBLACK);
}

/// The mapswitch to Seaview.map
void seaview()
{
    _mapwrap_on = 0;
    V1_MapSwitch("SEAVIEW.MAP",12,34,TBLACK);
}


void SetChasmModeObs()
{
    int i;

    for(i=88; i<=96; i++)
    {
        SetObs( i,79,1 );
        SetObs( i,80,0 );
        SetObs( i,81,1 );
    }

    SetObs( 88,80,1 );
    SetObs( 96,80,1 );
}

void airship()
{
/*
start();

return;
    

GrantSkill( "Darin", "Sword_Dance" );
GrantSkill( "Darin", "Cleave" );
GrantSkill( "Darin", "Wave_Blade" );

GrantSkill( "Darin", "Sex_Bomb" );
GrantSkill( "Darin", "Redecorate" );
GrantSkill( "Darin", "Death_Magenta" );

GrantSkill( "Darin", "Move_Buster" );
GrantSkill( "Darin", "Funky_Flow" );
GrantSkill( "Darin", "Bling_Blast" );

GrantSkill( "Darin", "Think" );
GrantSkill( "Darin", "Funk" );

Log( "==========" );
Log( BM_MakeCastMenu( GetCast("Darin"), 0) );
Log( "==========" );

MessageBox( "CHOWN'D!" );

return;
*/
    int i, ent;

    for( i=0; i<PartySize(); i++ )
    {
        ent = master_cast[party[i]].entity;
        entity.visible[ent] = 0;
    }

    entity.obstructable[0] = 0;
    entity.speed[0] = 45;

    SetPlayer(0);
    playerent = 0;

    V1_StartMusic( "res/music/Flight3.it" );

    HookKey(SCAN_ENTER, "airship_land");

    entity.specframe[0] = 20;
    wait(10);
    entity.specframe[0] = 21;
    wait(10);
    entity.specframe[0] = 22;
    wait(10);
    entity.specframe[0] = 23;
    wait(10);
    entity.specframe[0] = 0;
    wait(10);

    SetVehicle( VEHICLE_AIRSHIP );
}

void airship_land()
{
    int i, ent;
    int my_tile = GetTile(entity.x[0]/16, entity.y[0]/16, 0);

    if( my_tile == 744 || my_tile == 69 )
    {
        entity.specframe[0] = 23;
        wait(10);
        entity.specframe[0] = 22;
        wait(10);
        entity.specframe[0] = 21;
        wait(10);
        entity.specframe[0] = 20;
        wait(10);

        for( i=0; i<PartySize(); i++ )
        {
            ent = master_cast[party[i]].entity;

            entity.x[ent] = entity.x[0];
            entity.y[ent] = entity.y[0];

            entity.visible[ent] = 1;
        }

        SetPlayer(master_cast[party[0]].entity);
        playerent = master_cast[party[0]].entity;

        HookKey(SCAN_ENTER, "");

        V1_StartMusic( "res/music/aurora.mod" );

        SetVehicle( VEHICLE_NONE );
    }
    else
    {
        entity.specframe[0] = 23;
        wait(10);
        entity.specframe[0] = 22;
        wait(10);
        entity.specframe[0] = 21;
        wait(10);
        entity.specframe[0] = 20;
        wait(10);
        entity.specframe[0] = 21;
        wait(10);
        entity.specframe[0] = 22;
        wait(10);
        entity.specframe[0] = 23;
        wait(10);
        entity.specframe[0] = 0;
    }
}
